// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ZestyBiteWebAppSolution.Data;

#nullable disable

namespace ZestyBiteWebAppSolution.Migrations
{
    [DbContext(typeof(ZestyBiteContext))]
    [Migration("20241113171725_ZestyBite")]
    partial class ZestyBite
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ZestyBiteWebAppSolution.Models.Accounts", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Account_ID");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("AccountId"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("Gender")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("longtext");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("longtext");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("RoleId")
                        .HasColumnType("tinyint")
                        .HasColumnName("Role_ID");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasColumnType("varchar(255)");

                    b.HasKey("AccountId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "RoleId" }, "Role_ID");

                    b.HasIndex(new[] { "UserName" }, "Username")
                        .IsUnique();

                    b.ToTable("account", (string)null);
                });

            modelBuilder.Entity("ZestyBiteWebAppSolution.Models.Bill", b =>
                {
                    b.Property<int>("BillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Bill_ID");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("BillId"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int")
                        .HasColumnName("Account_ID");

                    b.Property<DateTime>("BillDatetime")
                        .HasColumnType("datetime")
                        .HasColumnName("Bill_Datetime");

                    b.Property<bool>("BillStatus")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("Bill_Status");

                    b.Property<bool>("BillType")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("Bill_Type");

                    b.Property<int>("PaymentId")
                        .HasColumnType("int")
                        .HasColumnName("Payment_ID");

                    b.Property<int>("TableId")
                        .HasColumnType("int")
                        .HasColumnName("Table_ID");

                    b.Property<decimal>("TotalCost")
                        .HasPrecision(10)
                        .HasColumnType("decimal(10)")
                        .HasColumnName("Total_Cost");

                    b.HasKey("BillId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "AccountId" }, "Account_ID");

                    b.HasIndex(new[] { "PaymentId" }, "Payment_ID");

                    b.HasIndex(new[] { "TableId" }, "Table_ID");

                    b.ToTable("bill", (string)null);
                });

            modelBuilder.Entity("ZestyBiteWebAppSolution.Models.Feedback", b =>
                {
                    b.Property<int>("FbId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Fb_ID");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("FbId"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int")
                        .HasColumnName("Account_ID");

                    b.Property<string>("FbContent")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Fb_Content");

                    b.Property<DateTime>("FbDatetime")
                        .HasColumnType("datetime")
                        .HasColumnName("Fb_Datetime");

                    b.Property<int>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("Item_ID");

                    b.HasKey("FbId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "AccountId" }, "Account_ID")
                        .HasDatabaseName("Account_ID1");

                    b.HasIndex(new[] { "ItemId" }, "Item_ID");

                    b.ToTable("feedback", (string)null);
                });

            modelBuilder.Entity("ZestyBiteWebAppSolution.Models.Item", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Item_ID");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ItemId"));

                    b.Property<bool>("IsServed")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("Is_Served");

                    b.Property<string>("ItemCategory")
                        .IsRequired()
                        .HasColumnType("enum('Main course','Dessert','Drink','Salad','Fruit')")
                        .HasColumnName("Item_Category");

                    b.Property<string>("ItemDescription")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Item_Description");

                    b.Property<string>("ItemImage")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Item_Image");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Item_Name");

                    b.Property<bool>("ItemStatus")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("Item_Status");

                    b.Property<decimal>("SuggestedPrice")
                        .HasPrecision(10)
                        .HasColumnType("decimal(10)")
                        .HasColumnName("Suggested_Price");

                    b.HasKey("ItemId")
                        .HasName("PRIMARY");

                    b.ToTable("item", (string)null);
                });

            modelBuilder.Entity("ZestyBiteWebAppSolution.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Payment_ID");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<bool>("PaymentMethod")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("Payment_Method");

                    b.HasKey("PaymentId")
                        .HasName("PRIMARY");

                    b.ToTable("payment", (string)null);
                });

            modelBuilder.Entity("ZestyBiteWebAppSolution.Models.Profit", b =>
                {
                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<int>("BillId")
                        .HasColumnType("int")
                        .HasColumnName("Bill_ID");

                    b.Property<decimal>("ProfitAmmount")
                        .HasPrecision(10)
                        .HasColumnType("decimal(10)")
                        .HasColumnName("Profit_Ammount");

                    b.Property<int>("SupplyId")
                        .HasColumnType("int")
                        .HasColumnName("Supply_ID");

                    b.HasKey("Date")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "BillId" }, "Bill_ID");

                    b.HasIndex(new[] { "SupplyId" }, "Supply_ID");

                    b.ToTable("profit", (string)null);
                });

            modelBuilder.Entity("ZestyBiteWebAppSolution.Models.Reservation", b =>
                {
                    b.Property<int>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Reservation_ID");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ReservationId"));

                    b.Property<int>("BillId")
                        .HasColumnType("int")
                        .HasColumnName("Bill_ID");

                    b.Property<DateTime>("ReservationEnd")
                        .HasColumnType("datetime")
                        .HasColumnName("Reservation_End");

                    b.Property<DateTime>("ReservationStart")
                        .HasColumnType("datetime")
                        .HasColumnName("Reservation_Start");

                    b.Property<int>("TableId")
                        .HasColumnType("int")
                        .HasColumnName("Table_ID");

                    b.HasKey("ReservationId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "BillId" }, "Bill_ID")
                        .HasDatabaseName("Bill_ID1");

                    b.HasIndex(new[] { "TableId" }, "Table_ID")
                        .HasDatabaseName("Table_ID1");

                    b.ToTable("reservation", (string)null);
                });

            modelBuilder.Entity("ZestyBiteWebAppSolution.Models.Role", b =>
                {
                    b.Property<sbyte>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasColumnName("Role_ID");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<sbyte>("RoleId"));

                    b.Property<string>("RoleDescription")
                        .IsRequired()
                        .HasColumnType("enum('Manager','Order Taker','Procurement Manager','Server Staff','Customer Service Staff','Food Runner','Customer')")
                        .HasColumnName("Role_Description");

                    b.HasKey("RoleId")
                        .HasName("PRIMARY");

                    b.ToTable("role", (string)null);
                });

            modelBuilder.Entity("ZestyBiteWebAppSolution.Models.Supply", b =>
                {
                    b.Property<int>("SupplyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Supply_ID");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("SupplyId"));

                    b.Property<DateTime>("DateExpiration")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Expiration");

                    b.Property<DateTime>("DateImport")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Import");

                    b.Property<int>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("Item_ID");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Product_Name");

                    b.Property<string>("SupplyCategory")
                        .IsRequired()
                        .HasColumnType("enum('Food','Drink','Facility')")
                        .HasColumnName("Supply_Category");

                    b.Property<decimal>("SupplyPrice")
                        .HasPrecision(10)
                        .HasColumnType("decimal(10)")
                        .HasColumnName("Supply_Price");

                    b.Property<int>("SupplyQuantity")
                        .HasColumnType("int")
                        .HasColumnName("Supply_Quantity");

                    b.Property<bool>("SupplyStatus")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("Supply_Status");

                    b.Property<int>("TableId")
                        .HasColumnType("int")
                        .HasColumnName("Table_ID");

                    b.Property<int>("VendorAddress")
                        .HasColumnType("int")
                        .HasColumnName("Vendor_Address");

                    b.Property<string>("VendorName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Vendor_Name");

                    b.Property<string>("VendorPhone")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Vendor_Phone");

                    b.HasKey("SupplyId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "ItemId" }, "Item_ID")
                        .HasDatabaseName("Item_ID1");

                    b.HasIndex(new[] { "TableId" }, "Table_ID")
                        .HasDatabaseName("Table_ID2");

                    b.HasIndex(new[] { "VendorPhone" }, "Vendor_Phone")
                        .IsUnique();

                    b.ToTable("supply", (string)null);
                });

            modelBuilder.Entity("ZestyBiteWebAppSolution.Models.Table", b =>
                {
                    b.Property<int>("TableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Table_ID");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("TableId"));

                    b.Property<int>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("Item_ID");

                    b.Property<int>("ReservationId")
                        .HasColumnType("int")
                        .HasColumnName("Reservation_ID");

                    b.Property<int>("TableCapacity")
                        .HasColumnType("int")
                        .HasColumnName("Table_Capacity");

                    b.Property<bool>("TableMaintenance")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("Table_Maintenance");

                    b.Property<string>("TableNote")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Table_Note");

                    b.Property<string>("TableStatus")
                        .IsRequired()
                        .HasColumnType("enum('Served','Empty','Waiting','Deposit')")
                        .HasColumnName("Table_Status");

                    b.Property<bool>("TableType")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("Table_Type");

                    b.HasKey("TableId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "ItemId" }, "Item_ID")
                        .HasDatabaseName("Item_ID2");

                    b.HasIndex(new[] { "ReservationId" }, "Reservation_ID");

                    b.ToTable("table", (string)null);
                });

            modelBuilder.Entity("ZestyBiteWebAppSolution.Models.TableDetail", b =>
                {
                    b.Property<int>("TableId")
                        .HasColumnType("int")
                        .HasColumnName("Table_ID");

                    b.Property<int>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("Item_ID");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("TableId", "ItemId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "ItemId" }, "Item_ID")
                        .HasDatabaseName("Item_ID3");

                    b.ToTable("table_details", (string)null);
                });

            modelBuilder.Entity("ZestyBiteWebAppSolution.Models.Accounts", b =>
                {
                    b.HasOne("ZestyBiteWebAppSolution.Models.Role", "Role")
                        .WithMany("Accounts")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("account_ibfk_1");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ZestyBiteWebAppSolution.Models.Bill", b =>
                {
                    b.HasOne("ZestyBiteWebAppSolution.Models.Accounts", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZestyBiteWebAppSolution.Models.Payment", "Payment")
                        .WithMany("Bills")
                        .HasForeignKey("PaymentId")
                        .IsRequired()
                        .HasConstraintName("bill_ibfk_1");

                    b.HasOne("ZestyBiteWebAppSolution.Models.Table", "Table")
                        .WithMany("Bills")
                        .HasForeignKey("TableId")
                        .IsRequired()
                        .HasConstraintName("bill_ibfk_3");

                    b.Navigation("Account");

                    b.Navigation("Payment");

                    b.Navigation("Table");
                });

            modelBuilder.Entity("ZestyBiteWebAppSolution.Models.Feedback", b =>
                {
                    b.HasOne("ZestyBiteWebAppSolution.Models.Accounts", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZestyBiteWebAppSolution.Models.Item", "Item")
                        .WithMany("Feedbacks")
                        .HasForeignKey("ItemId")
                        .IsRequired()
                        .HasConstraintName("feedback_ibfk_2");

                    b.Navigation("Account");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("ZestyBiteWebAppSolution.Models.Profit", b =>
                {
                    b.HasOne("ZestyBiteWebAppSolution.Models.Bill", "Bill")
                        .WithMany("Profits")
                        .HasForeignKey("BillId")
                        .IsRequired()
                        .HasConstraintName("profit_ibfk_2");

                    b.HasOne("ZestyBiteWebAppSolution.Models.Supply", "Supply")
                        .WithMany("Profits")
                        .HasForeignKey("SupplyId")
                        .IsRequired()
                        .HasConstraintName("profit_ibfk_1");

                    b.Navigation("Bill");

                    b.Navigation("Supply");
                });

            modelBuilder.Entity("ZestyBiteWebAppSolution.Models.Reservation", b =>
                {
                    b.HasOne("ZestyBiteWebAppSolution.Models.Bill", "Bill")
                        .WithMany("Reservations")
                        .HasForeignKey("BillId")
                        .IsRequired()
                        .HasConstraintName("reservation_ibfk_2");

                    b.HasOne("ZestyBiteWebAppSolution.Models.Table", "Table")
                        .WithMany("Reservations")
                        .HasForeignKey("TableId")
                        .IsRequired()
                        .HasConstraintName("reservation_ibfk_1");

                    b.Navigation("Bill");

                    b.Navigation("Table");
                });

            modelBuilder.Entity("ZestyBiteWebAppSolution.Models.Supply", b =>
                {
                    b.HasOne("ZestyBiteWebAppSolution.Models.Item", "Item")
                        .WithMany("Supplies")
                        .HasForeignKey("ItemId")
                        .IsRequired()
                        .HasConstraintName("supply_ibfk_2");

                    b.HasOne("ZestyBiteWebAppSolution.Models.Table", "Table")
                        .WithMany("Supplies")
                        .HasForeignKey("TableId")
                        .IsRequired()
                        .HasConstraintName("supply_ibfk_1");

                    b.Navigation("Item");

                    b.Navigation("Table");
                });

            modelBuilder.Entity("ZestyBiteWebAppSolution.Models.Table", b =>
                {
                    b.HasOne("ZestyBiteWebAppSolution.Models.Item", "Item")
                        .WithMany("Tables")
                        .HasForeignKey("ItemId")
                        .IsRequired()
                        .HasConstraintName("table_ibfk_1");

                    b.HasOne("ZestyBiteWebAppSolution.Models.Reservation", "Reservation")
                        .WithMany("Tables")
                        .HasForeignKey("ReservationId")
                        .IsRequired()
                        .HasConstraintName("table_ibfk_2");

                    b.Navigation("Item");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("ZestyBiteWebAppSolution.Models.TableDetail", b =>
                {
                    b.HasOne("ZestyBiteWebAppSolution.Models.Item", "Item")
                        .WithMany("TableDetails")
                        .HasForeignKey("ItemId")
                        .IsRequired()
                        .HasConstraintName("table_details_ibfk_2");

                    b.HasOne("ZestyBiteWebAppSolution.Models.Table", "Table")
                        .WithMany("TableDetails")
                        .HasForeignKey("TableId")
                        .IsRequired()
                        .HasConstraintName("table_details_ibfk_1");

                    b.Navigation("Item");

                    b.Navigation("Table");
                });

            modelBuilder.Entity("ZestyBiteWebAppSolution.Models.Bill", b =>
                {
                    b.Navigation("Profits");

                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("ZestyBiteWebAppSolution.Models.Item", b =>
                {
                    b.Navigation("Feedbacks");

                    b.Navigation("Supplies");

                    b.Navigation("TableDetails");

                    b.Navigation("Tables");
                });

            modelBuilder.Entity("ZestyBiteWebAppSolution.Models.Payment", b =>
                {
                    b.Navigation("Bills");
                });

            modelBuilder.Entity("ZestyBiteWebAppSolution.Models.Reservation", b =>
                {
                    b.Navigation("Tables");
                });

            modelBuilder.Entity("ZestyBiteWebAppSolution.Models.Role", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("ZestyBiteWebAppSolution.Models.Supply", b =>
                {
                    b.Navigation("Profits");
                });

            modelBuilder.Entity("ZestyBiteWebAppSolution.Models.Table", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("Reservations");

                    b.Navigation("Supplies");

                    b.Navigation("TableDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
