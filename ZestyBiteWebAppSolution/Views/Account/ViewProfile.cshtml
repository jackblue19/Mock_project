@{
    ViewBag.Title = "General Information";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@model ZestyBiteWebAppSolution.Models.DTOs.ProfileDTO

<link href="~/css/EditProfile.css" rel="stylesheet" />

<!-- Form to send data to the controller -->
<div class="container form-config" style="padding: 100px">
    <div class="row no-gutters row-bordered row-border-light">
        <div class="col-12 col-md-3 pt-0">
            <div class="list-group list-group-flush account-settings-links">
                <label class="btn btn-outline" for="file-input">
                    <img id="icon-placeholder" style="width: 100%; max-width: 150px; height: auto; border-radius: 50%; object-fit: cover;" src="" alt="Default Icon" class="responsive">
                    <input type="file" class="account-settings-fileinput" style="display:none" id="file-input" onchange="loadImage(event)">
                    <span class="mt-2 text-white d-flex flex-column align-items-center">Select photo</span>
                </label>
                <div class="d-flex justify-content-between mt-2 mb-3">
                    <button id="remove-image" style="display: none;" onclick="removeImage()">Remove</button>
                    <button id="save-photo" style="display: none;" onclick="savePhoto()">Save</button>
                </div>
            </div>
        </div>
        <div class="col-12 col-md-9 text-primary">
            <div class="card-body">
                <div class="form-group">
                    <label class="form-label">Name</label>
                    <input type="text" asp-for="Name" class="form-control" readonly id="nameField" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label class="form-label">E-mail</label>
                    <input type="text" asp-for="Email" class="form-control" readonly id="emailField" />
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label class="form-label">Phone Number</label>
                    <input type="text" asp-for="PhoneNumber" class="form-control" readonly id="phoneNumberField" />
                    <span asp-validation-for="PhoneNumber" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label class="form-label">Address</label>
                    <input type="text" asp-for="Address" class="form-control" readonly id="addressField" />
                    <span asp-validation-for="Address" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label class="form-label">Gender</label>
                    <div class="gender-options">
                        <div class="gender-option">
                            <input type="radio" id="male" name="gender" value="male" disabled />
                            <label for="male">Male</label>
                        </div>
                        <div class="gender-option">
                            <input type="radio" id="female" name="gender" value="female" disabled />
                            <label for="female">Female</label>
                        </div>
                    </div>
                </div>

                <!-- Edit, Save, Cancel buttons -->
                <div class="text-right mt-3">
                    <button type="button" class="btn btn-primary" id="editBtn" onclick="enableEdit()">Edit</button>
                    <button type="button" class="btn btn-success" id="saveBtn" style="display:none;" onclick="saveChanges()">Save changes</button>
                    <button type="button" class="btn btn-secondary" id="cancelBtn" style="display:none;" onclick="cancelChanges()">Cancel</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/js/EditProfile.js"></script>
    <script>
        // Enable editing functionality
        function enableEdit() {
            // Enable the fields for editing
            document.getElementById("phoneNumberField").removeAttribute("readonly");
            document.getElementById("addressField").removeAttribute("readonly");

            // Enable gender options
            document.getElementById("male").removeAttribute("disabled");
            document.getElementById("female").removeAttribute("disabled");

            // Show Save and Cancel buttons, hide Edit button
            document.getElementById("editBtn").style.display = "none";
            document.getElementById("saveBtn").style.display = "inline-block";
            document.getElementById("cancelBtn").style.display = "inline-block";
        }

        async function saveChanges() {
            const dto = {
                PhoneNumber: document.getElementById("phoneNumberField").value,
                Address: document.getElementById("addressField").value,
                Gender: document.querySelector('input[name="gender"]:checked')?.value || null
            };

            try {
                const response = await fetch('/Account/UpdateProfile', {
                    method: 'PUT',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(dto)
                });


                if (response.ok) {
                    const result = await response.json();
                    alert(result.Message); // Thông báo thành công
                    disableEdit();
                } else {
                    const error = await response.json();
                    alert("Failed to update profile: " + (error.Message || "Unknown error"));
                }
            } catch (error) {
                console.error("Error updating profile:", error);
                alert("An unexpected error occurred.");
            }
        }


        // Cancel editing (reset to the original values)
        function cancelChanges() {
            // Placeholder for resetting the values (in case the user clicks Cancel)
            // You can reload the data or just reset values manually if needed

            // Disable the fields
            disableEdit();
        }

        // Disable the fields and reset the buttons
        function disableEdit() {
            // Make fields readonly again
            document.getElementById("phoneNumberField").setAttribute("readonly", true);
            document.getElementById("addressField").setAttribute("readonly", true);

            // Disable gender options
            document.getElementById("male").setAttribute("disabled", true);
            document.getElementById("female").setAttribute("disabled", true);

            // Reset the buttons
            document.getElementById("editBtn").style.display = "inline-block";
            document.getElementById("saveBtn").style.display = "none";
            document.getElementById("cancelBtn").style.display = "none";
        }
    </script>
}
