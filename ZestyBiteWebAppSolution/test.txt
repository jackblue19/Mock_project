public async Task<FeedbackDTO> SubmitFeedbackAsync(FeedbackDTO feedbackDto, string usn)
{
    if (feedbackDto == null)
    {
        throw new ArgumentNullException(nameof(feedbackDto));
    }

    var account = await _accountRepository.GetAccountByUsnAsync(usn);
    var item = await _itemRepository.GetByIdAsync(feedbackDto.ItemId);
    if (account == null) throw new InvalidOperationException("Invalid Account.");
    if (item == null) throw new InvalidOperationException("Invalid Item.");

    var feedback = _mapper.Map<Feedback>(feedbackDto);
    feedback.Username = usn;
    feedback.UsernameNavigation = account;
    feedback.Item = item;

    var createdFeedback = await _feedbackRepository.CreateAsync(feedback);
    return _mapper.Map<FeedbackDTO>(createdFeedback);
}
